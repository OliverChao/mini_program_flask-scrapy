技术:
    
合理性:
    打卡页: 我们的小程序提供的打卡页面, 让使用者们相互激励, 共同进步. 在完成一定任务后, 也可以选择性的浏览 其他使用者的打卡状态. 打卡行为将上传到服务器, 可以查看自己的所有打卡情况
    
    任务页: .....     顺便提供缓存服务, 可以但不强制使用者将任务状态缓存到 服务器, 也可以从服务器 读取自己最新的任务情况.

可靠性:
    打卡页: 
        1.后端数据采用分页处理, 具有时效性, 访问的信息永远都是最新的.不会出现, 时间戳混乱现象.
        2.不会直接给用户返回 openid ,然是在后端产生一个更新的token,保证用户安全
        3.未注册用户只能使用简单的浏览功能 ,发表动态会受限,赞同和评论功能受限. 不会污染现有使用者的任何数据. 
        4.后端有一定的防御措施, 若发现有而已访问,或者不正常用户, 此账号信息会在短时间内不能产生新的token, 即无凭证使用打卡和任务状态保存服务器的服务,防止对小程序生态的破坏.
        
    任务页: (考虑..极端的使用情况,,)

性能:
    打卡页: 
        1.后端使用 Nginx 和 uwsgi 并发架构.,给一定的缓存机制,并适时清理. 多用户高并发情况下的访问性能完全满足用户的体验, 不会降低用户的需求.
        2.我们经过高并发爬虫, 对后端和服务器 进行压力测试. 在实验室的网络环境下,进行压力测试. 
        3. 服务器处理 1000个请求(模拟 小程序的下拉请求分页,和上拉刷新 等等),每个请求5条数据,共耗时50s , 平均处理每次请求花费0.05s.所以小程序从网络请求数据到前端渲染数据,用户的体验感较好.
    任务页:(完善缓存机制)